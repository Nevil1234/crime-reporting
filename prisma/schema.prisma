// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid())
  email          String?        @unique
  passwordHash   String?
  role           Role           @default(COMPLAINANT)
  phone          String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  reports        CrimeReport[]
  officerProfile PoliceOfficer?

  @@index([email])
  @@index([phone])
}

enum Role {
  COMPLAINANT
  OFFICER
  ADMIN
}

model CrimeReport {
  id              String                                 @id @default(uuid())
  crimeType       String
  description     String?
  location        Unsupported("geography(Point, 4326)")?
  priority        Priority                               @default(NORMAL)
  status          Status                                 @default(PENDING)
  isAnonymous     Boolean                                @default(false)
  anonymousToken  String?                                @unique
  createdAt       DateTime                               @default(now())
  updatedAt       DateTime                               @updatedAt
  complainant     User?                                  @relation(fields: [complainantId], references: [id])
  complainantId   String?
  assignedOfficer PoliceOfficer?                         @relation(fields: [officerId], references: [id])
  officerId       String?
  station         PoliceStation?                         @relation(fields: [stationId], references: [id])
  stationId       String?
  evidence        Evidence[]
  messages        Message[]
  heatmapData     HeatmapData[]

  @@index([location], type: Gist)
  @@index([createdAt])
  @@index([priority])
}

enum Priority {
  EMERGENCY
  HIGH
  NORMAL
}

enum Status {
  PENDING
  ASSIGNED
  IN_PROGRESS
  RESOLVED
  CLOSED
}

model PoliceOfficer {
  id              String                                 @id @default(uuid())
  badgeNumber     String                                 @unique
  currentLocation Unsupported("geography(Point, 4326)")?
  activeCases     Int                                    @default(0)
  maxCapacity     Int                                    @default(5)
  isAvailable     Boolean                                @default(true)
  user            User                                   @relation(fields: [userId], references: [id])
  userId          String                                 @unique
  station         PoliceStation                          @relation(fields: [stationId], references: [id])
  stationId       String
  assignedReports CrimeReport[]
  createdAt       DateTime                               @default(now())
  updatedAt       DateTime                               @updatedAt

  @@index([currentLocation], type: Gist)
}

model PoliceStation {
  id            String                                 @id @default(uuid())
  name          String
  location      Unsupported("geography(Point, 4326)")?
  contactNumber String
  address       String?
  officers      PoliceOfficer[]
  createdAt     DateTime                               @default(now())
  updatedAt     DateTime                               @updatedAt
  reports       CrimeReport[]

  @@index([location], type: Gist)
}

model Evidence {
  id        String       @id @default(uuid())
  url       String
  type      EvidenceType
  report    CrimeReport  @relation(fields: [reportId], references: [id])
  reportId  String
  createdAt DateTime     @default(now())

  @@index([reportId])
}

enum EvidenceType {
  IMAGE
  VIDEO
  AUDIO
  DOCUMENT
}

model Message {
  id        String        @id @default(uuid())
  content   String
  sentBy    MessageSender
  report    CrimeReport   @relation(fields: [reportId], references: [id])
  reportId  String
  createdAt DateTime      @default(now())

  @@index([reportId])
}

enum MessageSender {
  COMPLAINANT
  OFFICER
}

model HeatmapData {
  id        String                                   @id @default(uuid())
  location  Unsupported("geography(Polygon, 4326)")?
  intensity Float
  report    CrimeReport                              @relation(fields: [reportId], references: [id])
  reportId  String
  createdAt DateTime                                 @default(now())

  @@index([location], type: Gist)
}

model UploadedFile {
  id        String @id @default(uuid())
  fileName  String
  fileType  String
  fileSize  Int
  fileUrl   String
  createdAt DateTime @default(now())
}
